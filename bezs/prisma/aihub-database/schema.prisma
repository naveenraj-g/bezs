generator client {
    provider = "prisma-client-js"
    output   = "../generated/ai-hub"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL_AI_HUB")
}

enum AiModelType {
    PRE_AVAILABLE
    CUSTOM
}

enum Status {
    ACTIVE
    INACTIVE
}

model AiModel {
    id          String      @id @default(uuid())
    displayName String?     @unique
    modelName   String?
    tokens      String?
    type        AiModelType
    secretKey   String?     @unique
    modelUrl    String?

    defaultPrompt String @default("You are a helpful assistant.")
    maxToken      Int    @default(1000)
    temperature   Float  @default(0.5)
    topP          Float  @default(1)
    topK          Float  @default(5)

    assistant Assistant[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id])
}

model Prompts {
    id          Int    @id @default(autoincrement())
    name        String
    description String
    status      Status @default(ACTIVE)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Assistant {
    id               Int    @id @default(autoincrement())
    name             String
    description      String
    greeting_message String
    prompt           String
    status           Status @default(ACTIVE)

    accessRoles AccessRole[]

    modelId String?
    model   AiModel? @relation(fields: [modelId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model AccessRole {
    id   Int    @id @default(autoincrement())
    name String

    assistantId Int
    assistant   Assistant @relation(fields: [assistantId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
